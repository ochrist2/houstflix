{"map":"{\"version\":3,\"sources\":[\"/root/videoHoster/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/root/videoHoster/src/logo.svg\",\"/root/videoHoster/src/App.js\",\"/root/videoHoster/src/serviceWorker.js\",\"/root/videoHoster/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"App\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"vidName\",\"changeVid\",\"event\",\"fetch\",\"method\",\"headers\",\"Accept\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"newVid\",\"then\",\"res\",\"json\",\"console\",\"log\",\"forceUpdate\",\"handleChange\",\"setState\",\"target\",\"value\",\"react_default\",\"a\",\"createElement\",\"className\",\"width\",\"height\",\"id\",\"controls\",\"src\",\"type\",\"href\",\"download\",\"onSubmit\",\"onChange\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uKCsDzBC,2BAjDb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAERQ,MAAQ,CACNC,QAAS,IAJQR,EAMnBS,UAAY,SAACC,GACXC,MAAM,oCAAqC,CACzCC,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,OAAQnB,EAAKO,MAAMC,YAGpBY,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAClBF,KAAK,SAAAE,GAAI,OAAIC,QAAQC,IAAIF,KAC1BtB,EAAKyB,eAnBYzB,EAsBnB0B,aAAe,SAAChB,GACdV,EAAK2B,SAAS,CAAEnB,QAASE,EAAMkB,OAAOC,SAvBrB7B,wEA0BjB,OACE8B,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,QAAA,CAAQE,MAAM,OAAOC,OAAO,MAAMC,GAAG,cAAcC,UAAQ,GACzDP,EAAAC,EAAAC,cAAA,SAAA,CAAQM,IAAI,8BAA8BC,KAAK,gBAGjDT,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,IAAA,CAAGQ,KAAK,iCAAiCC,UAAQ,GAAjD,YACAX,EAAAC,EAAAC,cAAA,KAAA,KAAA,cAEAF,EAAAC,EAAAC,cAAA,OAAA,CAAMU,SAAUvC,KAAKM,WACnBqB,EAAAC,EAAAC,cAAA,QAAA,KAAA,gBAENF,EAAAC,EAAAC,cAAA,QAAA,CAAOO,KAAK,OAAOV,MAAO1B,KAAKI,MAAMC,QAASmC,SAAUxC,KAAKuB,gBAEvDI,EAAAC,EAAAC,cAAA,QAAA,CAAOO,KAAK,SAASV,MAAM,oBA3CnBe,EAAAA,YCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrC,KAAK,SAAAsC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\n\\nclass App extends Component {\\n  constructor(props) {\\n    super(props)\\n  }\\n  state = {\\n    vidName: ''\\n  }\\n  changeVid = (event) => {\\n    fetch('http://localhost:4200/changeVideo', {\\n      method: 'POST',\\n      headers: {\\n        'Accept': 'application/json',\\n        'Content-Type': 'application/json',\\n      },\\n      body: JSON.stringify({\\n        newVid: this.state.vidName,\\n\\n      })\\n    }).then(res => res.json())\\n    .then(json => console.log(json));\\n    this.forceUpdate()\\n    //this.setState({vidName: ''})\\n  }\\n  handleChange = (event) => {\\n    this.setState({ vidName: event.target.value });\\n  }\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n      <div>\\n        <video  width=\\\"1280\\\" height=\\\"720\\\" id=\\\"videoPlayer\\\" controls >\\n          <source src=\\\"http://localhost:4200/video\\\" type=\\\"video/mp4\\\" />\\n        </video>\\n        </div>\\n        <br />\\n        <a href=\\\"http://24.54.91.194:4200/video\\\" download>Download</a>\\n        <h1>Change vid</h1>\\n\\n        <form onSubmit={this.changeVid}>\\n          <label>\\n            New vid name:\\n    <input type=\\\"text\\\" value={this.state.vidName} onChange={this.handleChange} />\\n          </label>\\n          <input type=\\\"submit\\\" value=\\\"Submit\\\" />\\n        </form>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,function(e,t,n){e.exports=n(17)},,,,,,function(e,t,n){},function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},function(e,t,n){},function(e,t,n){\"use strict\";n.r(t);var a=n(0),o=n.n(a),i=n(2),c=n.n(i),r=(n(14),n(3)),l=n(4),d=n(6),s=n(5),h=n(7),u=(n(15),n(16),function(e){function t(e){var n;return Object(r.a)(this,t),(n=Object(d.a)(this,Object(s.a)(t).call(this,e))).state={vidName:\"\"},n.changeVid=function(e){fetch(\"http://localhost:4200/changeVideo\",{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({newVid:n.state.vidName})}).then(function(e){return e.json()}).then(function(e){return console.log(e)}),n.forceUpdate()},n.handleChange=function(e){n.setState({vidName:e.target.value})},n}return Object(h.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(\"div\",null,o.a.createElement(\"video\",{width:\"1280\",height:\"720\",id:\"videoPlayer\",controls:!0},o.a.createElement(\"source\",{src:\"http://localhost:4200/video\",type:\"video/mp4\"}))),o.a.createElement(\"br\",null),o.a.createElement(\"a\",{href:\"http://24.54.91.194:4200/video\",download:!0},\"Download\"),o.a.createElement(\"h1\",null,\"Change vid\"),o.a.createElement(\"form\",{onSubmit:this.changeVid},o.a.createElement(\"label\",null,\"New vid name:\",o.a.createElement(\"input\",{type:\"text\",value:this.state.vidName,onChange:this.handleChange})),o.a.createElement(\"input\",{type:\"submit\",value:\"Submit\"})))}}]),t}(a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(o.a.createElement(u,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[8,1,2]]]);","extractedComments":[]}